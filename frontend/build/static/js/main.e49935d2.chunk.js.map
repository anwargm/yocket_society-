{"version":3,"sources":["components/common/uiCard.js","services/dataServices.js","components/feed.js","utils/slug.js","components/showMembers.js","components/common/form.js","components/services/application.js","components/services/complaint.js","components/services/meeting.js","components/services/maintenance.js","components/services/neighbourhood.js","components/service.js","components/welcome.js","components/common/navbar.js","services/userServices.js","components/auth/login.js","components/auth/signup.js","components/auth/logout.js","App.js","serviceWorker.js","index.js","illustrations/service.svg","illustrations/welcome-1.svg"],"names":["useStyles","makeStyles","card","maxWidth","media","height","UiCard","props","classes","image","content","data","sideContent1","sideContent","property","mediaHeight","buttonLabel1","buttonLabel2","onClick","button","handleClick","Card","className","CardActionArea","CardMedia","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","getToken","localStorage","getItem","config","headers","resource","params","axios","get","post","withRouter","user","history","service","push","toLowerCase","replace","Container","Grid","container","spacing","description","map","item","lg","service_img","ShowMembers","useState","members","setMembers","useEffect","a","dataService","toast","error","fetch","member","theme","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Form","fields","heading","signup","dropDown","postSubmitLogic","noIcon","React","formFields","setFormFields","handleChange","currentTarget","name","value","CssBaseline","IconButton","style","fontSize","noValidate","onSubmit","e","preventDefault","f","xs","sm","TextField","autoComplete","type","multiline","rows","onChange","placeholder","required","fullWidth","id","label","autoFocus","InputLabel","htmlFor","Select","options","o","justify","Link","href","Application","applications","setApplications","committee","setCommittee","submittedFormData","success","console","log","message","handleApplication","tag","applicationHandler","application","action","applicationId","_id","isCommitteeMember","status","Complaint","complaints","setcomplaints","handleComplaint","complaintHandler","complaint","complaintId","response","Meeting","meetings","setMeetings","fetchService","meeting","dateOfMeeting","time","Maintenance","services","setServices","length","Neighbourhood","contact","Service","serviceTitle","match","btn","border","src","welcome1","fontWeight","fontFamily","Date","getFullYear","grow","flexGrow","menuButton","marginRight","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","handleMenuClose","handleAuth","authType","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","AppBar","Toolbar","edge","aria-label","noWrap","InputBase","root","input","inputProps","aria-controls","aria-haspopup","event","url","jwtDecode","ex","removeItem","credential","Login","useHistory","token","setItem","window","location","Signup1","Signup2","state","Signup","path","pathname","Logout","userService","App","setUser","render","exact","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"iQAYMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,KAGdC,MAAO,CACHC,OAAQ,OAID,SAASC,EAAOC,GAG3B,IAAMC,EAAUR,IAERS,EAAqIF,EAArIE,MAAOC,EAA8HH,EAA9HG,QAASC,EAAqHJ,EAArHI,KAAMC,EAA+GL,EAA/GK,aAAcC,EAAiGN,EAAjGM,YAAaC,EAAoFP,EAApFO,SAAUC,EAA0ER,EAA1EQ,YAAaC,EAA6DT,EAA7DS,aAAcC,EAA+CV,EAA/CU,aAAcC,EAAiCX,EAAjCW,QAASC,EAAwBZ,EAAxBY,OAAQC,EAAgBb,EAAhBa,YAC7H,OACI,kBAACC,EAAA,EAAD,CAAMC,UAAWd,EAAQN,KAErBgB,QAAS,kBAAMA,EAAUA,EAAQP,GAAQ,OACzC,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAEIF,UAAWP,EAAcP,EAAQJ,MAAQ,KACzCK,MAAOA,EACPgB,MAAOd,EAAKG,KAEhB,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC3CnB,EAAKG,IAGV,kBAACa,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KACxDpB,IAGPG,GACD,oCACA,kBAACc,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KACpDlB,GAEN,kBAACe,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KACtDjB,KAOZ,kBAACmB,EAAA,EAAD,KACMb,GACF,oCACC,kBAACc,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,UAC3Bb,QAAW,kBAAME,EAAYT,EAAM,OACjCK,GAEH,kBAACiB,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,UAC1Bb,QAAW,kBAAME,EAAYT,EAAM,OAC/BM,M,qBCjEfkB,EAAW,WACb,OAAOC,aAAaC,QAHP,qBAMXC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChB,eAAgBJ,MAuBT,EAhBC,SAACK,GAA6B,IAAnBC,EAAkB,uDAAT,KAChC,OAAOC,IAAMC,IAAN,UAlBC,4BAkBD,YAAoBH,GAAY,CACnCD,QAAS,CACL,eAAgB,mBAChB,eAAgBJ,KAEpBM,OAAQA,KAUD,EANE,SAACD,EAAU7B,GACxB,OAAO+B,IAAME,KAAN,UA5BC,4BA4BD,YAAqBJ,GAAY7B,EAAM2B,I,mCC4CnCO,eA5DG,SAACtC,GAEWA,EAAlBuC,KAFkB,IAEZC,EAAYxC,EAAZwC,QAUR3B,EAAc,SAAC4B,GACjB,OAAOD,EAAQE,KAAR,WAAsBD,EAAQvB,MC1B3ByB,cACTC,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,KACfA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,MDqB+BH,IAKnD,OACA,kBAACI,EAAA,EAAD,KAEQ,6BACA,6BACA,kBAACzB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,MAAjC,kCAGA,6BAGI,kBAACwB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAzBpB,CACb,CAAC9B,MAAO,sBAAuB+B,YAAY,mFAC3C,CAAC/B,MAAO,aAAc+B,YAAY,6CAClC,CAAC/B,MAAO,UAAW+B,YAAY,oEAC/B,CAAC/B,MAAO,0BAA2B+B,YAAY,sDAC/C,CAAC/B,MAAO,yBAA0B+B,YAAY,0DAsBrBC,KAAI,SAAAT,GAAO,OAIhB,kBAACK,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACX,kBAACrD,EAAD,CACIG,MAAOmD,IACPjD,KAAMqC,EACNlC,SAAS,QACTJ,QAASsC,EAAQQ,YACjBzC,aAAa,EACbG,QAASE,EACTJ,aAAa,gB,wBEelC6C,EAhEK,SAACtD,GAAW,IAAD,EAEKuD,mBAAS,IAFd,mBAEnBC,EAFmB,KAEVC,EAFU,KAgB3B,OAZCC,qBAAU,WAAI,4CACV,WAAqBzB,GAArB,iBAAA0B,EAAA,+EAEgCC,EAAoB3B,GAFpD,gBAEiB7B,EAFjB,EAEiBA,KACRqD,EAAWrD,GAHpB,gDAMQyD,IAAMC,MAAM,wBANpB,0DADU,uBAAC,SAAD,2BAUVC,CAAM,WACP,IAED,kBAAClB,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAEf,kBAACF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAIrBQ,EAAQN,KAAI,SAAAc,GAAM,OAId,kBAAClB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAGX,kBAACrD,EAAD,CACIK,KAAM4D,EACNzD,SAAS,aACTJ,QAAS6D,EAAM,mB,+ECT7CvE,EAAYC,aAAW,SAAAuE,GAAK,MAAK,CACnCC,MAAO,CACHC,UAAWF,EAAMjB,QAAQ,GACzBoB,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQP,EAAMjB,QAAQ,GACtByB,gBAAiBR,EAAMS,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPX,UAAWF,EAAMjB,QAAQ,IAE7B+B,OAAQ,CACJP,OAAQP,EAAMjB,QAAQ,EAAG,EAAG,QAIrB,SAASgC,EAAKhF,GACzB,IAAMC,EAAUR,IACRwF,EAAuEjF,EAAvEiF,OAAQC,EAA+DlF,EAA/DkF,QAAStE,EAAsDZ,EAAtDY,OAAQuE,EAA8CnF,EAA9CmF,OAAQC,EAAsCpF,EAAtCoF,SAAUC,EAA4BrF,EAA5BqF,gBAAiBC,EAAWtF,EAAXsF,OAFpC,EAGIC,IAAMhC,SAAS,IAHnB,mBAGzBiC,EAHyB,KAGbC,EAHa,KAK1BC,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACfd,EAAI,eAAOW,GACfX,EAAKc,EAAcC,MAASD,EAAcE,MAC1CJ,EAAcZ,IAUlB,OACI,kBAAChC,EAAA,EAAD,CAAWtB,UAAU,OAAO3B,SAAS,MACjC,kBAACkG,EAAA,EAAD,MACA,yBAAK/E,UAAWd,EAAQiE,QAClBoB,GACE,kBAACS,EAAA,EAAD,KAAY,kBAAC,IAAD,CAAaC,MAAO,CAAEC,SAAU,OAAQzE,MA5C1D,aA+CE,kBAACJ,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,MAC9B4D,GAEL,0BAAMnE,UAAWd,EAAQ4E,KAAMqB,YAAU,EAACC,SAnBjC,SAACC,GAClBA,EAAEC,iBACF,IAAMjG,EAAI,eAAQoF,GAGlBH,EAAgBjF,KAeJ,kBAAC0C,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAEjBiC,EAAO/B,KAAI,SAAAoD,GAAC,OACR,oCACA,kBAACxD,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,GAAIC,GAAI,GAAIpD,GAAI,IAC3B,kBAACqD,EAAA,EAAD,CACQC,aAAcJ,EAAEV,KAChBe,KAAML,EAAEK,KACRf,KAAMU,EAAEV,KACRgB,UAAWN,EAAEM,UACbC,KAAMP,EAAEO,KACRvF,QAAQ,WACRuE,MAAOL,EAAWc,EAAEV,MACpBkB,SAAUpB,EACVqB,YAAaT,EAAES,YAAcT,EAAES,YAAc,GACjDC,UAAQ,EACRC,WAAS,EACLC,GAAIZ,EAAEV,KACVuB,MAAOb,EAAEa,MACTC,WAAS,SASxBhC,GACI,kBAACtC,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,GAAIC,GAAI,GAAIpD,GAAI,IAChC,kBAACiE,EAAA,EAAD,CAAYC,QAASlC,EAASQ,MAAOR,EAAS+B,OAC1C,kBAACI,EAAA,EAAD,CACI3B,KAAMR,EAASQ,KACfC,MAAOL,EAAWJ,EAASQ,MAC3BkB,SAAUpB,EACVsB,UAAQ,EACRC,WAAS,EACTC,GAAI9B,EAASQ,KACbtE,QAAQ,WACR8F,WAAS,EACTL,YAAa3B,EAAS+B,OAErB/B,EAASoC,QAAQtE,KAAI,SAAAuE,GAAC,OACnB,4BAAQ5B,MAAO4B,GACVA,SAUzB,kBAAC/F,EAAA,EAAD,CACIiF,KAAM/F,EAAO+F,KACbM,WAAS,EACT3F,QAAQ,YACR0E,MAAO,CAAExE,MAAO,QAASiD,gBAAgB7D,EAAOY,OAChDT,UAAWd,EAAQ8E,QAElBnE,EAAOuG,OAEXhC,GACG,oCACA,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAAC2E,QAAQ,YACpB,kBAAC5E,EAAA,EAAD,CAAMK,MAAI,GACN,kBAACwE,EAAA,EAAD,CAAMC,KAAK,IAAItG,QAAQ,SAAvB,0CC7IhC,IAkJeuG,EAlJK,SAAC7H,GACrB,IACQuC,EAASvC,EAATuC,KAFuB,EASWgB,mBAAS,IATpB,mBASvBuE,EATuB,KASTC,EATS,OAUKxE,oBAAS,GAVd,mBAUvByE,EAVuB,KAUZC,EAVY,KAcpB5C,EAAe,uCAAG,WAAO6C,GAAP,SAAAvE,EAAA,+EAIXC,EAAqB,cAAesE,GAJzB,OAKhBrE,IAAMsE,QAAQ,sCALE,gDAQjBC,QAAQC,IAAI,KAAEC,SACdzE,IAAMC,MAAM,wBATK,yDAAH,sDAchByE,EAAiB,uCAAG,WAAOC,GAAP,qBAAA7E,EAAA,yDAEV,OAAR6E,EAFkB,gCAGK5E,EAAoB,2BAHzB,gBAGVxD,EAHU,EAGVA,KACR2H,EAAgB3H,GACf6H,GAAa,GALI,0BAOL,WAARO,EAPa,kCAQK5E,EAAoB,eARzB,iBAQVxD,EARU,EAQVA,KACR2H,EAAgB3H,GAChB6H,GAAa,GAVK,4CAAH,sDAcrBQ,EAAkB,uCAAG,WAAOC,EAAaC,GAApB,eAAAhF,EAAA,6DAClBzB,EAAS,CACX0G,cAAeF,EAAYG,IAC3BF,OAAOA,GAHa,kBAMV/E,EAAoB,qBAAsB1B,GANhC,OAOhB2B,IAAMsE,QAAQ,wBAPE,gDAUpBtE,IAAMC,MAAM,wBAVQ,yDAAH,wDAapB,OACI,kBAACjB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACpB,kBAACF,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,EAAGC,GAAI,EAAGpD,GAAI,GAC1B,kBAAC1B,EAAA,EAAD,CACEuF,WAAS,EACL3F,QAAQ,YACR0E,MAAO,CAAExE,MAAO,SAAUiD,gBA7DpC,UA+DK9D,QAAS,kBAAK4H,EAAkB,QALjC,oBASEhG,EAAKuG,mBACN,oCACC,kBAAChG,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,EAAGC,GAAI,EAAGpD,GAAI,GAC/B,kBAAC1B,EAAA,EAAD,CACEuF,WAAS,EACL3F,QAAQ,YACR0E,MAAO,CAAExE,MAAO,SAAUiD,gBAzEpC,UA2EK9D,QAAS,kBAAK4H,EAAkB,YALjC,yBAWL,kBAACzF,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,GAAIC,GAAI,GAAIpD,GAAI,IAChC,kBAAC4B,EAAD,CACIK,gBAAiBA,EACjBH,QAAQ,cACRD,OAnFD,CAEP,CAAEW,KAAM,UAAWuB,MAAO,UAAWR,KAAM,QAC3C,CAAEf,KAAM,UAAWuB,MAAO,UAAWR,KAAM,OAAQC,WAAW,EAAMC,KAAK,OAiFjEjG,OA3EG,CAAE+F,KAAM,SAAUQ,MAAO,SAAU3F,MAAO,eA+EzC,kBAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAIrB8E,EAAa5E,KAAI,SAAAwF,GAAW,OAIxB,kBAAC5F,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAEP4E,EAEF,kBAACjI,EAAD,CACEa,QAAQ,EACRR,KAAMsI,EACNnI,SAAS,UACTJ,QAASuI,EAAYvI,QACrBG,YAAaoI,EAAYK,OACzBtI,aAAa,UACbC,aAAa,SACbG,YAAa4H,IAIjB,kBAAC1I,EAAD,CACIK,KAAMsI,EACNnI,SAAS,UACTJ,QAASuI,EAAYvI,QACrBG,YAAaoI,EAAYK,OACzBlI,YAAa4H,WC2BlCO,EAnJG,SAAChJ,GACnB,IACQuC,EAASvC,EAATuC,KAFqB,EAQSgB,mBAAS,IARlB,mBAQrB0F,EARqB,KAQTC,EARS,OASO3F,oBAAS,GAThB,mBASrByE,EATqB,KASVC,EATU,KAalB5C,EAAe,uCAAG,WAAO6C,GAAP,SAAAvE,EAAA,+EAIXC,EAAqB,YAAasE,GAJvB,OAKhBrE,IAAMsE,QAAQ,oCALE,gDAQjBC,QAAQC,IAAI,KAAEC,SACdzE,IAAMC,MAAM,wBATK,yDAAH,sDAchBqF,EAAe,uCAAG,WAAOX,GAAP,qBAAA7E,EAAA,yDAER,OAAR6E,EAFgB,gCAGO5E,EAAoB,yBAH3B,gBAGRxD,EAHQ,EAGRA,KACR8I,EAAc9I,GACb6H,GAAa,GALE,0BAOH,WAARO,EAPW,kCAQO5E,EAAoB,aAR3B,iBAQRxD,EARQ,EAQRA,KACR8I,EAAc9I,GACd6H,GAAa,GAVG,4CAAH,sDAcnBmB,EAAgB,uCAAG,WAAOC,EAAWV,GAAlB,eAAAhF,EAAA,6DAChBzB,EAAS,CACXoH,YAAaD,EAAUR,IACvBF,OAAOA,GAHW,kBAMR/E,EAAoB,mBAAoB1B,GANhC,OAOd2B,IAAMsE,QAAQ,sBAPA,gDAUlBtE,IAAMC,MAAM,wBAVM,yDAAH,wDAalB,OACI,kBAACjB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACpB,kBAACF,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,EAAGC,GAAI,EAAGpD,GAAI,GAC1B,kBAAC1B,EAAA,EAAD,CACEuF,WAAS,EACL3F,QAAQ,YACR0E,MAAO,CAAExE,MAAO,SAAUiD,gBA5DpC,UA8DK9D,QAAS,kBAAKwI,EAAgB,QAL/B,kBASE5G,EAAKuG,mBACN,oCACC,kBAAChG,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,EAAGC,GAAI,EAAGpD,GAAI,GAC/B,kBAAC1B,EAAA,EAAD,CACEuF,WAAS,EACL3F,QAAQ,YACR0E,MAAO,CAAExE,MAAO,SAAUiD,gBAxEpC,UA0EK9D,QAAS,kBAAKwI,EAAgB,YAL/B,uBAWL,kBAACrG,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,GAAIC,GAAI,GAAIpD,GAAI,IAChC,kBAAC4B,EAAD,CACIK,gBAAiBA,EACjBH,QAAQ,mBACRD,OAlFD,CACP,CAAEW,KAAM,UAAWuB,MAAO,UAAWR,KAAM,QAC3C,CAAEf,KAAM,YAAauB,MAAO,YAAaR,KAAM,OAAQC,WAAW,EAAMC,KAAK,MAiFrEjG,OA3EG,CAAE+F,KAAM,SAAUQ,MAAO,SAAU3F,MAAO,eA+EzC,kBAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAIrBiG,EAAW/F,KAAI,SAAAmG,GAAS,OAIpB,kBAACvG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAEP4E,EAEF,kBAACjI,EAAD,CACEa,QAAQ,EACRR,KAAMiJ,EACN9I,SAAS,UACTJ,QAASkJ,EAAS,UAClBhJ,aAAcgJ,EAAUE,SACxBjJ,YAAa+I,EAAUN,OACvBtI,aAAa,WACbC,aAAa,cACbG,YAAauI,IAIjB,kBAACrJ,EAAD,CACIK,KAAMiJ,EACN9I,SAAS,UACTJ,QAASkJ,EAAS,UAClBhJ,aAAcgJ,EAAUE,SACxBjJ,YAAa+I,EAAUN,OACvBlI,YAAauI,WCTlCI,EAhHC,SAACxJ,GACjB,IACQuC,EAASvC,EAATuC,KAFmB,EAYOgB,mBAAS,IAZhB,mBAYnBkG,EAZmB,KAYTC,EAZS,KAcxBhG,qBAAU,WAAI,4CACR,WAA4BzB,GAA5B,iBAAA0B,EAAA,+EAEgCC,EAAoB3B,GAFpD,gBAEiB7B,EAFjB,EAEiBA,KACRsJ,EAAYtJ,GAHrB,gDAMQyD,IAAMC,MAAM,wBANpB,0DADQ,uBAAC,SAAD,2BAUR6F,CAAa,aACd,IAEJ,IAEOtE,EAAe,uCAAG,WAAO6C,GAAP,SAAAvE,EAAA,+EAIXC,EAAqB,UAAWsE,GAJrB,OAKhBrE,IAAMsE,QAAQ,qCALE,gDAQjBC,QAAQC,IAAI,KAAEC,SACdzE,IAAMC,MAAM,wBATK,yDAAH,sDActB,OACI,kBAACjB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtB,kBAACF,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,GAAIC,GAAI,GAAIpD,GAAI,IAChC,kBAAC4B,EAAD,CACIK,gBAAiBA,EACjBH,QAAQ,qBACRD,OA/CD,CACP,CAAEW,KAAM,SAAUuB,MAAO,SAAUR,KAAM,QACzC,CAAEf,KAAM,gBAAiBuB,MAAO,kBAAmBR,KAAM,QACzD,CAAEf,KAAM,OAAQuB,MAAO,OAAQR,KAAM,QACrC,CAAEf,KAAM,QAASuB,MAAO,QAASR,KAAM,QACvC,CAAEf,KAAM,uBAAwBuB,MAAO,eAAgBR,KAAM,OAAQI,YAAa,+BA2C1EnG,OAxBG,CAAE+F,KAAM,SAAUQ,MAAO,mBAAoB3F,MAAO,eA4BnD,kBAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAIrByG,EAASvG,KAAI,SAAA0G,GAAO,OAIhB,kBAAC9G,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAEPb,EAAKuG,kBAEP,kBAAC/I,EAAD,CACEa,QAAQ,EACRR,KAAMwJ,EACNrJ,SAAS,SACTJ,QAASyJ,EAAO,MAChBvJ,aAAcuJ,EAAQC,cACtBvJ,YAAasJ,EAAQE,KACrBrJ,aAAa,cACbC,aAAa,mBAKjB,kBAACX,EAAD,CACIK,KAAMwJ,EACNrJ,SAAS,SACTJ,QAASyJ,EAAO,MAChBvJ,aAAcuJ,EAAQC,cACtBvJ,YAAasJ,EAAQE,cCgB1CC,EArGK,SAAC/J,GAAW,IACxBuC,EAASvC,EAATuC,KADuB,EAQOgB,mBAAS,IARhB,mBAQnByG,EARmB,KAQTC,EARS,KAWrB5E,EAAe,uCAAG,WAAO6C,GAAP,SAAAvE,EAAA,+EAIVC,EAAqB,cAAesE,GAJ1B,OAKfrE,IAAMsE,QAAQ,8BALC,gDAQhBC,QAAQC,IAAI,KAAEC,SACdzE,IAAMC,MAAM,wBATI,yDAAH,sDAyBrB,OAZCJ,qBAAU,WAAI,4CACV,WAA4BzB,GAA5B,iBAAA0B,EAAA,+EAEgCC,EAAoB3B,GAFpD,gBAEiB7B,EAFjB,EAEiBA,KACR6J,EAAY7J,GAHrB,gDAMQyD,IAAMC,MAAM,wBANpB,0DADU,uBAAC,SAAD,2BAUV6F,CAAa,iBACd,IAED,kBAAC9G,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACpBT,EAAKuG,mBACN,oCACE,kBAAChG,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,GAAIC,GAAI,GAAIpD,GAAI,IAEnC,kBAAC4B,EAAD,CACIK,gBAAiBA,EACjBH,QAAQ,gBACRD,OA5CD,CACP,CAAEW,KAAM,kBAAmBuB,MAAO,oBAAqBR,KAAM,OAAQI,YAAa,2CAClF,CAAEnB,KAAM,SAAUuB,MAAO,SAAUR,KAAM,OAAQI,YAAa,sBAC9D,CAAEnB,KAAM,eAAgBuB,MAAO,iBAAkBR,KAAM,SA0C/C/F,OAtCG,CAAE+F,KAAM,SAAUQ,MAAO,SAAU3F,MAAO,gBA6CpDwI,EAASE,QACV,oCACY,kBAACpH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAIrBgH,EAAS9G,KAAI,SAAAT,GAAO,OAIhB,kBAACK,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAGX,kBAACrD,EAAD,CACIK,KAAMqC,EACNlC,SAAS,kBACTJ,QAASsC,EAAO,aAChBnC,YAAamC,EAAQsG,iBCwB1CoB,EA/FO,SAACnK,GACNA,EAATuC,KAD0B,IAAD,EAQKgB,mBAAS,IARd,mBAQrByG,EARqB,KAQXC,EARW,KAWvB5E,EAAe,uCAAG,WAAO6C,GAAP,SAAAvE,EAAA,+EAIVC,EAAqB,gBAAiBsE,GAJ5B,OAKfrE,IAAMsE,QAAQ,8BALC,gDAQhBC,QAAQC,IAAI,KAAEC,SACdzE,IAAMC,MAAM,wBATI,yDAAH,sDAyBrB,OAZCJ,qBAAU,WAAI,4CACV,WAA4BzB,GAA5B,iBAAA0B,EAAA,+EAEgCC,EAAoB3B,GAFpD,gBAEiB7B,EAFjB,EAEiBA,KACR6J,EAAY7J,GAHrB,gDAMQyD,IAAMC,MAAM,wBANpB,0DADU,uBAAC,SAAD,2BAUV6F,CAAa,mBACd,IAED,kBAAC9G,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAC1B,kBAACF,EAAA,EAAD,CAAMK,MAAI,EAACoD,GAAI,GAAIC,GAAI,GAAIpD,GAAI,IAC5B,kBAAC4B,EAAD,CACIK,gBAAiBA,EACjBH,QAAQ,gBACRD,OAzCD,CACP,CAAEW,KAAM,cAAeuB,MAAO,mBAAoBR,KAAM,OAAQI,YAAa,sCAC7E,CAAEnB,KAAM,cAAeuB,MAAO,kBAAmBR,KAAM,OAAQI,YAAa,+BAC5E,CAAEnB,KAAM,UAAWuB,MAAO,qBAAsBR,KAAM,OAAQI,YAAa,mBAuCnEnG,OAnCG,CAAE+F,KAAM,SAAUQ,MAAO,SAAU3F,MAAO,eAuCpDwI,EAASE,QACV,oCACY,kBAACpH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAIrBgH,EAAS9G,KAAI,SAAAT,GAAO,OAIhB,kBAACK,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAGX,kBAACrD,EAAD,CACIK,KAAMqC,EACNlC,SAAS,cACTJ,QAASsC,EAAO,YAChBnC,YAAamC,EAAQ2H,kBC7C1CC,EArBC,SAACrK,GAAW,IACpBsK,EAAiBtK,EAAMuK,MAAMrI,OAA7BoI,aACA/H,EAASvC,EAATuC,KAER,MAAqB,wBAAjB+H,EACQ,kBAAC,EAAD,CAAa/H,KAAMA,IAEL,eAAjB+H,EACG,kBAAC,EAAD,CAAW/H,KAAMA,IAEH,YAAjB+H,EACG,kBAAC,EAAD,CAAS/H,KAAMA,IAED,4BAAjB+H,EACG,kBAAC,EAAD,CAAa/H,KAAMA,IAEL,2BAAjB+H,EACG,kBAAC,EAAD,CAAe/H,KAAMA,SAD5B,G,kBCVC9C,GAAYC,aAAW,SAAAuE,GAAK,MAAK,CACnCuG,IAAK,CACDC,OAAO,cAAD,OAJA,WAKNhG,gBALM,UAMNjD,MAAO,QACP,UAAW,CACPiD,gBARE,gBAiECnC,gBApDC,SAACtC,GAEb,IAAMC,EAAUR,KAIhB,OACI,oCACI,6BAEA,kBAACqD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMK,MAAI,EAACoD,IAAE,GACT,yBAAKmE,IAAKC,QAEd,kBAAC7H,EAAA,EAAD,CAAMK,MAAI,EAACoD,IAAE,GACT,kBAACnF,EAAA,EAAD,CAAYE,QAAQ,KAChB0E,MAAO,CAAE4E,WAAY,QACrB,6BAFJ,gDAMA,kBAACxJ,EAAA,EAAD,CAAYE,QAAQ,MAChB,6BADJ,4EAEgE,6BAFhE,8CAGoC,6BAHpC,qDAKA,6BACA,kBAACI,EAAA,EAAD,CACIiF,KAAK,SACLrF,QAAQ,YACRX,QA3BA,WAChB,OAAOX,EAAMwC,QAAQE,KAAK,iBA2BV3B,UAAWd,EAAQuK,KAJvB,iBAaR,gCAEI,2BAAOxE,MAAO,CAAE6E,WAAY,WAA5B,oBAA2D,IAAIC,MAAOC,cAAtE,IAAqF,kBAACpD,EAAA,EAAD,CAAMnG,MAAM,UAAUoG,KAAK,KAA3B,eAArF,IAAuI,kBAACD,EAAA,EAAD,CAAMnG,MAAM,UAAUoG,KAAK,KAA3B,WAAvI,KACL,kBAACD,EAAA,EAAD,CAAMnG,MAAM,UAAUoG,KAAK,KAA3B,kB,8HCjDLnI,GAAYC,aAAW,SAAAuE,GAAK,MAAK,CACnC+G,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAalH,EAAMjB,QAAQ,IAE/B9B,MAAM,cACFkD,QAAS,OACT5C,MAVM,QAWNoJ,WAAY,OACX3G,EAAMmH,YAAYC,GAAG,MAAQ,CAC1BjH,QAAS,UAGjBkH,OAAO,cACHC,SAAU,WACVC,aAAcvH,EAAMwH,MAAMD,aAC1B/G,gBAAiBiH,aAAKzH,EAAMS,QAAQiH,OAAOC,MAAO,KAClD,UAAW,CACPnH,gBAAiBiH,aAAKzH,EAAMS,QAAQiH,OAAOC,MAAO,MAEtDT,YAAalH,EAAMjB,QAAQ,GAC3B6I,WAAY,EACZ/G,MAAO,QACNb,EAAMmH,YAAYC,GAAG,MAAQ,CAC1BQ,WAAY5H,EAAMjB,QAAQ,GAC1B8B,MAAO,SAGfgH,WAAY,CACRhH,MAAOb,EAAMjB,QAAQ,GACrBlD,OAAQ,OACRyL,SAAU,WACVQ,cAAe,OACf3H,QAAS,OACTE,WAAY,SACZ0H,eAAgB,UAEpBC,UAAW,CACPzK,MAAO,WAEX0K,WAAW,cACPC,QAASlI,EAAMjB,QAAQ,EAAG,EAAG,EAAG,GAChCoJ,WAAYnI,EAAMoI,YAAYC,OAAO,SACrCxH,MAAO,QACNb,EAAMmH,YAAYC,GAAG,MAAQ,CAC1BvG,MAAO,MAGfyH,eAAe,cACXnI,QAAS,QACRH,EAAMmH,YAAYC,GAAG,MAAQ,CAC1BjH,QAAS,SAGjBoI,cAAc,cACVpI,QAAS,QACRH,EAAMmH,YAAYC,GAAG,MAAQ,CAC1BjH,QAAS,aAoJN9B,oBA/If,SAAgBtC,GAAQ,IAEZuC,EAASvC,EAATuC,KACFtC,EAAUR,KAHG,EAIa8F,IAAMhC,SAAS,MAJ5B,mBAIZkJ,EAJY,KAIFC,EAJE,OAKiCnH,IAAMhC,SAAS,MALhD,mBAKZoJ,EALY,KAKQC,EALR,KAObC,EAAaC,QAAQL,GAWrBM,GAVmBD,QAAQH,GAUT,WACpBD,EAAY,MAJZE,EAAsB,QAsBpBI,EAAa,SAACC,GAChB,MAAiB,UAAbA,EACOjN,EAAMwC,QAAQE,KAAK,eACb,WAAbuK,EACOjN,EAAMwC,QAAQE,KAAK,qBAD9B,GAOEwK,EAAS,8BACTC,EACF,kBAACC,GAAA,EAAD,CACIX,SAAUA,EACVY,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CrG,GAAIgG,EACJM,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDG,KAAMb,EACNc,QAASZ,GAGT,kBAACa,GAAA,EAAD,CAAUjN,QAASoM,GAAnB,WACD,kBAACa,GAAA,EAAD,CAAUjN,QAjBM,WACvB,OAAOX,EAAMwC,QAAQE,KAAK,kBAgBnB,WAOP,OACI,yBAAK3B,UAAWd,EAAQ+K,MACpB,kBAAC6C,GAAA,EAAD,CAAQtC,SAAS,SACbvF,MAAO,CACHvB,gBAAiB,YAErB,kBAACqJ,GAAA,EAAD,KACI,kBAAC/H,EAAA,EAAD,CACIgI,KAAK,QACLhN,UAAWd,EAAQiL,WAEnB8C,aAAW,eAEX,kBAAC,KAAD,OAEJ,kBAAC5M,EAAA,EAAD,CAAYL,UAAWd,EAAQiB,MAAOI,QAAQ,KAAK2M,QAAM,GACrD,kBAAClI,EAAA,EAAD,CAAYpF,QApDR,WACpB,OAAOX,EAAMwC,QAAQE,KAAK,MAmD4BsD,MAAO,CAAExE,MApJzD,UAoJU,eAEJ,yBAAKT,UAAWd,EAAQqL,QACpB,yBAAKvK,UAAWd,EAAQ6L,YACpB,kBAAC,KAAD,OAEJ,kBAACoC,GAAA,EAAD,CACInH,YAAY,eACZ9G,QAAS,CACLkO,KAAMlO,EAAQgM,UACdmC,MAAOnO,EAAQiM,YAEnBmC,WAAY,CAAE,aAAc,aAGpC,yBAAKtN,UAAWd,EAAQ+K,OACxB,yBAAKjK,UAAWd,EAAQsM,gBACnBhK,GACD,oCAEE,kBAACwD,EAAA,EAAD,CAAYC,MAAO,CAAEC,SAAU,QAAUzE,MAAM,UAAUb,QA5EpD,WACvB,OAAOX,EAAMwC,QAAQE,KAAK,gCA2ER,uBAMAH,GACE,oCAEI,kBAACwD,EAAA,EAAD,CAAYC,MAAO,CAAEC,SAAU,QAAUzE,MAAM,UAAUb,QAAS,kBAAMqM,EAAW,WAAnF,SAIA,kBAACjH,EAAA,EAAD,CAAYC,MAAO,CAAEC,SAAU,QAAUzE,MAAM,UAAUb,QAAS,kBAAMqM,EAAW,YAAnF,WAMR,kBAACjH,EAAA,EAAD,CACIgI,KAAK,MACLC,aAAW,0BACXM,gBAAepB,EACfqB,gBAAc,OACd5N,QArHM,SAAA6N,GAC1B9B,EAAY8B,EAAM7I,gBAqHEnE,MAAM,WAEN,kBAAC,KAAD,QAGR,yBAAKT,UAAWd,EAAQuM,kBAM/BjK,EAAO4K,EAAa,S,oBC3N3BsB,GAAM,4BAuCG,IAnCJ5M,aAAaC,QAHP,oBAYI,SAACS,GAElB,OAAOJ,IAAME,KAAN,UAAcoM,GAAd,sBAAuClM,KAwBnC,GAtCE,mBAsCF,GAdQ,WACnB,IAEI,OADamM,KAAU7M,aAAaC,QA1B3B,qBA6Bb,MAAO6M,GACH,OAAO,OAQA,GALA,WACX9M,aAAa+M,WAlCA,qBAsCF,GAnBG,SAACC,GACf,OAAO1M,IAAME,KAAN,UAAcoM,GAAd,qBAAsCI,ICmBlCC,GApCD,WACMC,cAAhB,IASO1J,EAAe,uCAAG,WAAO6C,GAAP,iBAAAvE,EAAA,+EAIalB,GAAkByF,GAJ/B,gBAIH8G,EAJG,EAIT5O,KAERyB,aAAaoN,QAAQxM,GAAkBuM,GACvCE,OAAOC,SAAW,IAPD,gDAWjB/G,QAAQC,IAAI,KAAEC,SACdzE,IAAMC,MAAM,wBAZK,yDAAH,sDAetB,OACI,oCACI,kBAACkB,EAAD,CACIK,gBAAiBA,EACjBH,QAAQ,QACRD,OA5BG,CAEX,CAAEW,KAAM,QAASuB,MAAO,QAASR,KAAM,SACvC,CAAEf,KAAM,WAAYuB,MAAO,WAAYR,KAAM,aA0BrC/F,OAvBG,CAAE+F,KAAM,SAAUQ,MAAO,QAAS3F,MAAO,eCPtD4N,GAAU,WACZ,IAAM5M,EAAUuM,cAehB,OACI,oCACI,kBAAC/J,EAAD,CACIK,gBATY,SAAC6C,GAIrB1F,EAAQE,KAAK,oBAAqBwF,IAM1BhD,QAAQ,+DACRD,OAnBG,CAEX,CAAEW,KAAM,QAASuB,MAAO,QAASR,KAAM,SACvC,CAAEf,KAAM,WAAYuB,MAAO,WAAYR,KAAM,aAiBrC/F,OAdG,CAAE+F,KAAM,SAAUQ,MAAO,WAAY3F,MAAO,eAoBzD6N,GAAU,SAACrP,GACb,IACMI,EADU2O,cACKI,SAASG,MAexBjK,EAAe,uCAAG,WAAO6C,GAAP,iBAAAvE,EAAA,6DAGhBpB,EAHgB,eAGJ2F,EAHI,GAGkB9H,GAHlB,kBAMOqC,GAAqBF,GAN5B,OAMVgH,EANU,OAQhB1H,aAAaoN,QAAQxM,GAAkB8G,EAASvH,QAAQ,iBACxDkN,OAAOC,SAAW,IATF,gDAYhB/G,QAAQC,IAAI,KAAEC,SACdzE,IAAMC,MAAM,wBAbI,yDAAH,sDAgBrB,OACI,oCACI,kBAACkB,EAAD,CACIK,gBAAiBA,EACjBH,QAAQ,+DACRD,OAnCG,CACX,CAAEW,KAAM,WAAYuB,MAAO,YAAaR,KAAM,QAC9C,CAAEf,KAAM,UAAWuB,MAAO,UAAWR,KAAM,QAC3C,CAAEf,KAAM,UAAWuB,MAAO,WAAYR,KAAM,UAC5C,CAAEf,KAAM,gBAAiBuB,MAAO,iBAAkBR,KAAM,OAAQI,YAAa,wBAC7E,CAAEnB,KAAM,aAAcuB,MAAO,uBAAwBR,KAAM,OAAQI,YAAa,kDAgCxEnG,OAzBG,CAAE+F,KAAM,SAAUQ,MAAO,OAAQ3F,MAAO,eAqC5C+N,GAPA,SAACvP,GACZ,IAAMwP,EAAOxP,EAAMmP,SAASM,SAC5B,MAAa,sBAATD,EACO,kBAAC,GAAD,MACO,iBAATA,EACE,kBAAC,GAAD,WADN,GCvEME,GAVA,WAOX,OALAhM,qBAAU,WACNiM,KACAT,OAAOC,SAAW,MACnB,IAEI,MCwCIS,OAnCf,WAAgB,IAAD,EACWrM,mBAAS,IADpB,mBACNhB,EADM,KACAsN,EADA,KASb,OANAnM,qBAAU,WAGRmM,EAAQF,QAEP,IAED,oCACE,kBAAC,GAAD,CACEpN,KAAMA,IAER,6BACA,6BACA,kBAAC,IAAD,MACA,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOiN,KAAK,oBAAoBjO,UAAWgO,KAC3C,kBAAC,IAAD,CAAOC,KAAK,eAAejO,UAAWgO,KACtC,kBAAC,IAAD,CAAOC,KAAK,cAAcjO,UAAWuN,KACpC,kBAAC,IAAD,CAAOU,KAAK,eAAejO,UAAWmO,KACvC,kBAAC,IAAD,CAAOF,KAAK,6BAA6BjO,UAAW+B,IAEpD,kBAAC,IAAD,CAAQkM,KAAK,iBAAiBM,OAAQ,SAAC9P,GAAD,OAAW,kBAAC,EAAD,iBAAaA,EAAb,CAAoBuC,KAAMA,QAE3E,kBAAC,IAAD,CAAOwN,OAAK,EAACP,KAAK,IAAIM,OAAQ,SAAC9P,GAAD,OAAWuC,EAAO,kBAAC,EAAD,iBAAUvC,EAAV,CAAiBuC,KAAMA,KAAW,kBAAC,GAAD,YChCtEuK,QACW,cAA7BoC,OAAOC,SAASa,UAEe,UAA7Bd,OAAOC,SAASa,UAEhBd,OAAOC,SAASa,SAASzF,MACvB,2DCZN0F,IAASH,OAAO,kBAAC,IAAD,KAAQ,kBAAC,GAAD,OAAkBI,SAASC,eAAe,SD6H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA5M,GACLsE,QAAQtE,MAAMA,EAAMwE,a,mBEzI5BqI,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.e49935d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 345,\r\n     \r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nexport default function UiCard(props) {\r\n\r\n    \r\n    const classes = useStyles();\r\n   \r\n    const { image, content, data, sideContent1, sideContent, property, mediaHeight, buttonLabel1, buttonLabel2, onClick, button, handleClick } = props;\r\n    return (\r\n        <Card className={classes.card}\r\n           \r\n            onClick={() => onClick ? onClick(data) : null}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    \r\n                    className={mediaHeight ? classes.media : null}\r\n                    image={image}\r\n                    title={data[property]}\r\n                />\r\n                <CardContent >\r\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                        {data[property]}\r\n          </Typography>\r\n          \r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                       {content}\r\n          </Typography>\r\n                </CardContent>\r\n                {sideContent && \r\n                <>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                       {sideContent1}\r\n                       </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                       {sideContent}\r\n                       </Typography>\r\n                </>\r\n                }\r\n                \r\n          \r\n            </CardActionArea>\r\n            <CardActions>\r\n                { button &&\r\n                <>\r\n                 <Button size=\"small\" color=\"primary\"\r\n                 onClick = {() => handleClick(data, '1')}>\r\n                  {buttonLabel1}\r\n        </Button> \r\n                <Button size=\"small\" color=\"primary\"\r\n                 onClick = {() => handleClick(data, '0')}>\r\n                    {buttonLabel2}\r\n        </Button> \r\n        </>\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","import axios from 'axios';\r\n\r\nconst URL = 'http://localhost:5000/api';\r\nconst tokenKey = 'privateUserToken';\r\n\r\nconst getToken = () => {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\n\r\nconst config = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': getToken()\r\n\r\n    },\r\n\r\n}\r\n\r\n\r\nconst getData = (resource, params = null) => {\r\n    return axios.get(`${URL}/${resource}`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-auth-token': getToken()\r\n        },\r\n        params: params\r\n    });\r\n\r\n}\r\nconst postData = (resource, data) => {\r\n    return axios.post(`${URL}/${resource}`, data, config);\r\n\r\n}\r\n\r\n\r\nexport default {\r\n    getData,\r\n    postData\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify';\r\n\r\nimport UiCard from './common/uiCard';\r\n\r\nimport dataServices from '../services/dataServices';\r\nimport { slug } from '../utils/slug';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport  service_img from '../illustrations/service.svg';\r\nimport  Typography  from '@material-ui/core/Typography';\r\nimport  Grid  from '@material-ui/core/Grid';\r\nimport  Container  from '@material-ui/core/Container';\r\n// import  Loader  from 'react-loading';\r\n\r\nconst Dashboard = (props) => {\r\n  \r\n    const { user, history } = props;\r\n    // const [services, setService] = useState([]);\r\n    const services = [\r\n        {title: 'Application request', description:'Submit application to make any request or to access any service of the society.'},\r\n        {title: 'Complaints', description:'To file any complaint related to society.'},\r\n        {title: 'Meeting', description:'Schedule and attend society meetings with track of all meetings.'},\r\n        {title: 'Maintenance information', description:'Know all the maintenance related information here.'},\r\n        {title: 'Neighbourhood services', description:'Get information about all the neighbourhood services.'},\r\n    ]\r\n\r\n    const handleClick = (service) => {\r\n        return history.push(`/${slug(service.title)}`, service);\r\n        \r\n    }\r\n   \r\n   \r\n    return (\r\n    <Container>\r\n         \r\n            <br />\r\n            <br />\r\n            <Typography gutterBottom variant=\"h2\">\r\n               Your Society management system\r\n                </Typography>\r\n            <br />\r\n           \r\n                \r\n                <Grid container spacing={6}>\r\n                    {\r\n                        services.map(service => (\r\n                  \r\n                        \r\n                           \r\n                            <Grid item lg={4}>\r\n                                <UiCard\r\n                                    image={service_img}\r\n                                    data={service}\r\n                                    property='title'\r\n                                    content={service.description}\r\n                                    mediaHeight={true}\r\n                                    onClick={handleClick}\r\n                                    buttonLabel1='Go'\r\n                                />\r\n                            </Grid>\r\n                   \r\n                       \r\n                    \r\n\r\n                    \r\n                        ))\r\n            \r\n                    }\r\n                </Grid>\r\n            \r\n   </Container>\r\n  )\r\n}\r\n\r\nexport default withRouter(Dashboard)\r\n","export const slug = (string) => {\r\n    return string.toLowerCase()\r\n        .replace(/\\s+/g, '-')\r\n        .replace(/^-+/, '')\r\n        .replace(/-+$/, ' ')\r\n        .replace(/\\?+/g, ' ')\r\n        .replace(/!+$/, ' ');\r\n}\r\nexport const removeQuesMark = (string) => {\r\n    return string\r\n        .replace(/\\?+$/, '')\r\n        .replace(/!+$/, '');\r\n        \r\n}","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport dataService from '../services/dataServices';\r\nimport Button from '@material-ui/core/Button';\r\nimport UiCard from './common/uiCard';\r\n\r\nconst ShowMembers = (props) => {\r\n\r\n    const [ members, setMembers ] = useState([]);\r\n \r\n     useEffect(()=>{\r\n         async function fetch(resource){\r\n             try{\r\n                  const { data } = await dataService.getData(resource);\r\n                  setMembers(data);\r\n             }\r\n             catch(e){\r\n                 toast.error('Something went wrong');\r\n             }\r\n         }\r\n         fetch('users');\r\n     }, [])\r\n    return(\r\n       <Container>\r\n          <Grid container spacing={2}>\r\n       \r\n                    <Grid container spacing={2}>\r\n                \r\n                    {\r\n                        \r\n                        members.map(member => (\r\n                  \r\n                        \r\n                           \r\n                            <Grid item lg={6}>\r\n                               \r\n                                \r\n                                <UiCard\r\n                                    data={member}\r\n                                    property='memberType'\r\n                                    content={member['fullName']}\r\n                                    \r\n                                />\r\n                                    \r\n                            </Grid>\r\n                            \r\n                                   \r\n    \r\n\r\n                                \r\n                    \r\n                        ))\r\n                    \r\n                    }\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n         </Container>  \r\n                                \r\n                                  \r\n                              \r\n                   \r\n                       \r\n                    \r\n\r\n                  \r\n    )\r\n\r\n}\r\n\r\nexport default ShowMembers;","\r\nimport React from 'react';\r\n// import Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import Box from '@material-ui/core/Box';\r\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// function Copyright() {\r\n//     return (\r\n//         <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//             {'Copyright © '}\r\n//             <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//                 Your Website\r\n//       </Link>{' '}\r\n//             {new Date().getFullYear()}\r\n//             {'.'}\r\n//         </Typography>\r\n//     );\r\n// }\r\nconst color = 'bf2604';\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Form(props) {\r\n    const classes = useStyles();\r\n    const { fields, heading, button, signup, dropDown, postSubmitLogic, noIcon } = props;\r\n    const [formFields, setFormFields] = React.useState({});\r\n\r\n    const handleChange = ({currentTarget}) => {\r\n        let form = {...formFields};\r\n        form[currentTarget.name] =  currentTarget.value;\r\n        setFormFields(form);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const data = { ...formFields };\r\n        \r\n        // data processing and working logic for individual forms\r\n        postSubmitLogic(data);\r\n        \r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                {!noIcon && \r\n                    <IconButton><HeadsetIcon style={{ fontSize: '50px', color: color }} /></IconButton>\r\n                }\r\n               \r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {heading}\r\n        </Typography>\r\n                <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {\r\n                            fields.map(f => (\r\n                                <>\r\n                                <Grid item xs={12} sm={12} lg={12}>\r\n                                    <TextField\r\n                                            autoComplete={f.name}\r\n                                            type={f.type}\r\n                                            name={f.name}\r\n                                            multiline={f.multiline}\r\n                                            rows={f.rows}\r\n                                            variant=\"outlined\"\r\n                                            value={formFields[f.name]}\r\n                                            onChange={handleChange}\r\n                                            placeholder={f.placeholder ? f.placeholder : ''}\r\n                                        required\r\n                                        fullWidth\r\n                                            id={f.name}\r\n                                        label={f.label}\r\n                                        autoFocus\r\n                                        />\r\n                                        \r\n                                       \r\n                                </Grid>\r\n                              </>  \r\n                            ))\r\n                            \r\n                        }\r\n                        {dropDown &&\r\n                             <Grid item xs={12} sm={12} lg={12}>\r\n                            <InputLabel htmlFor={dropDown.name}>{dropDown.label}</InputLabel>\r\n                                <Select\r\n                                    name={dropDown.name}\r\n                                    value={formFields[dropDown.name]}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    fullWidth\r\n                                    id={dropDown.name}\r\n                                    variant=\"outlined\"\r\n                                    autoFocus\r\n                                    placeholder={dropDown.label}\r\n                                >\r\n                                    {dropDown.options.map(o => (\r\n                                        <option value={o}>\r\n                                            {o}\r\n                                        </option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Grid>\r\n                        }\r\n\r\n                       \r\n                       \r\n                    </Grid>\r\n                    <Button\r\n                        type={button.type}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        style={{ color: 'white', backgroundColor:button.color }}\r\n                        className={classes.submit}\r\n                    >\r\n                        {button.label}\r\n                    </Button>\r\n                    {signup &&\r\n                        <>\r\n                        <Grid container justify=\"flex-end\">\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Already have an account? Sign in\r\n              </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </>\r\n                     }\r\n                   \r\n                </form>\r\n            </div>\r\n          \r\n        </Container>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport Form from '../common/form';\r\nimport { toast } from 'react-toastify';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport dataService from '../../services/dataServices';\r\nimport Button from '@material-ui/core/Button';\r\nimport UiCard from '../common/uiCard';\r\n\r\nconst Application = (props) => {\r\nconst color = 'bf2604';\r\nconst { user } = props;   \r\nconst fields = [\r\n      \r\n        { name: 'subject', label: 'Subject', type: 'text', },\r\n        { name: 'content', label: 'Content', type: 'text', multiline: true, rows:'10'},\r\n\r\n    ];\r\nconst [ applications, setApplications ] = useState([]);\r\nconst [ committee, setCommittee ] = useState(false);\r\n\r\n    const button = { type: 'submit', label: 'Submit', color: '#bf2604' };\r\n\r\n     const postSubmitLogic = async (submittedFormData) => { \r\n        \r\n        try {\r\n           \r\n            await dataService.postData('application', submittedFormData);\r\n             toast.success('Application successfully submitted');\r\n        }\r\n        catch (e) {\r\n            console.log(e.message);\r\n            toast.error('Something went wrong');\r\n        }\r\n    }\r\n\r\n    // To see all application and reviewing\r\n    const handleApplication = async (tag) => {\r\n        \r\n        if (tag === 'my'){\r\n            const { data } = await dataService.getData('application/currentUser');\r\n            setApplications(data);\r\n             setCommittee(false);\r\n        }\r\n        else if (tag === 'review'){\r\n            const { data } = await dataService.getData('application');\r\n            setApplications(data);\r\n            setCommittee(true);\r\n        }\r\n    }\r\n// To handle application approve or reject\r\nconst applicationHandler = async (application, action) => {\r\n   const params = {\r\n       applicationId: application._id,\r\n       action:action\r\n   }\r\n   try {\r\n           await dataService.getData('application/handle', params);\r\n           toast.success('Application reviewed')\r\n   }\r\n   catch(e){\r\n       toast.error('Something went wrong')\r\n   }\r\n}\r\n    return(\r\n        <Container>\r\n          <Grid container spacing={2}>\r\n               <Grid item xs={6} sm={6} lg={3}>\r\n                  <Button\r\n                    fullWidth\r\n                        variant=\"contained\"\r\n                        style={{ color: 'bf2604', backgroundColor:color }}\r\n                        \r\n                   onClick={()=> handleApplication('my')}>\r\n                   My applications\r\n                      </Button>\r\n                   </Grid>\r\n                   {user.isCommitteeMember && \r\n                   <>\r\n                    <Grid item xs={6} sm={6} lg={3}>\r\n                  <Button\r\n                    fullWidth\r\n                        variant=\"contained\"\r\n                        style={{ color: 'bf2604', backgroundColor:color }}\r\n                        \r\n                   onClick={()=> handleApplication('review')}>\r\n                   Review applications\r\n                      </Button>\r\n                   </Grid>\r\n                   </>\r\n                   }\r\n             <Grid item xs={12} sm={12} lg={12}>\r\n            <Form\r\n                postSubmitLogic={postSubmitLogic}\r\n                heading='Application'\r\n                fields={fields}\r\n                button={button} />\r\n                </Grid>\r\n              \r\n        </Grid>\r\n                    <Grid container spacing={2}>\r\n                \r\n                    {\r\n                        \r\n                        applications.map(application => (\r\n                  \r\n                        \r\n                           \r\n                            <Grid item lg={6}>\r\n                                {\r\n                                    committee ?\r\n                                \r\n                                  <UiCard\r\n                                    button={true} \r\n                                    data={application}\r\n                                    property='subject'\r\n                                    content={application.content}\r\n                                    sideContent={application.status}\r\n                                    buttonLabel1='Approve'\r\n                                    buttonLabel2='Reject'\r\n                                    handleClick={applicationHandler}\r\n\r\n                                />\r\n                                :\r\n                                <UiCard\r\n                                    data={application}\r\n                                    property='subject'\r\n                                    content={application.content}\r\n                                    sideContent={application.status}\r\n                                    handleClick={applicationHandler}\r\n                                   \r\n                                />\r\n    \r\n\r\n                                \r\n                                }\r\n                                  \r\n                              \r\n                            </Grid>\r\n                   \r\n                       \r\n                    \r\n\r\n                    \r\n                        ))\r\n                    \r\n                    }\r\n                    \r\n                </Grid>\r\n                 </Container>  \r\n                  \r\n    )\r\n\r\n}\r\n\r\nexport default Application;\r\n","import React, { useState } from 'react';\r\nimport Form from '../common/form';\r\nimport { toast } from 'react-toastify';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport dataService from '../../services/dataServices';\r\nimport Button from '@material-ui/core/Button';\r\nimport UiCard from '../common/uiCard';\r\n\r\nconst Complaint = (props) => {\r\nconst color = 'bf2604';\r\nconst { user } = props;   \r\nconst fields = [\r\n        { name: 'subject', label: 'Subject', type: 'text'},\r\n        { name: 'complaint', label: 'Complaint', type: 'text', multiline: true, rows:'5'}\r\n\r\n    ];\r\nconst [ complaints, setcomplaints ] = useState([]);\r\nconst [ committee, setCommittee ] = useState(false);\r\n\r\n    const button = { type: 'submit', label: 'Submit', color: '#bf2604' };\r\n\r\n     const postSubmitLogic = async (submittedFormData) => { \r\n        \r\n        try {\r\n           \r\n            await dataService.postData('complaint', submittedFormData);\r\n             toast.success('Complaint successfully submitted');\r\n        }\r\n        catch (e) {\r\n            console.log(e.message);\r\n            toast.error('Something went wrong');\r\n        }\r\n    }\r\n\r\n    // To see all complaint and reviewing\r\n    const handleComplaint = async (tag) => {\r\n        \r\n        if (tag === 'my'){\r\n            const { data } = await dataService.getData('complaint/currentUser');\r\n            setcomplaints(data);\r\n             setCommittee(false);\r\n        }\r\n        else if (tag === 'review'){\r\n            const { data } = await dataService.getData('complaint');\r\n            setcomplaints(data);\r\n            setCommittee(true);\r\n        }\r\n    }\r\n// To handle complaint in process or resolved\r\nconst complaintHandler = async (complaint, action) => {\r\n   const params = {\r\n       complaintId: complaint._id,\r\n       action:action\r\n   }\r\n   try {\r\n           await dataService.getData('complaint/handle', params);\r\n           toast.success('Complaint reviewed')\r\n   }\r\n   catch(e){\r\n       toast.error('Something went wrong')\r\n   }\r\n}\r\n    return(\r\n        <Container>\r\n          <Grid container spacing={2}>\r\n               <Grid item xs={6} sm={6} lg={3}>\r\n                  <Button\r\n                    fullWidth\r\n                        variant=\"contained\"\r\n                        style={{ color: 'bf2604', backgroundColor:color }}\r\n                        \r\n                   onClick={()=> handleComplaint('my')}>\r\n                   My complaints\r\n                      </Button>\r\n                   </Grid>\r\n                   {user.isCommitteeMember && \r\n                   <>\r\n                    <Grid item xs={6} sm={6} lg={3}>\r\n                  <Button\r\n                    fullWidth\r\n                        variant=\"contained\"\r\n                        style={{ color: 'bf2604', backgroundColor:color }}\r\n                        \r\n                   onClick={()=> handleComplaint('review')}>\r\n                   Review complaints\r\n                      </Button>\r\n                   </Grid>\r\n                   </>\r\n                   }\r\n             <Grid item xs={12} sm={12} lg={12}>\r\n            <Form\r\n                postSubmitLogic={postSubmitLogic}\r\n                heading='File a Complaint'\r\n                fields={fields}\r\n                button={button} />\r\n                </Grid>\r\n              \r\n        </Grid>\r\n                    <Grid container spacing={2}>\r\n                \r\n                    {\r\n                        \r\n                        complaints.map(complaint => (\r\n                  \r\n                        \r\n                           \r\n                            <Grid item lg={6}>\r\n                                {\r\n                                    committee ?\r\n                                \r\n                                  <UiCard\r\n                                    button={true} \r\n                                    data={complaint}\r\n                                    property='subject'\r\n                                    content={complaint['complaint']}\r\n                                    sideContent1={complaint.response}\r\n                                    sideContent={complaint.status}\r\n                                    buttonLabel1='Resolved'\r\n                                    buttonLabel2='In progress'\r\n                                    handleClick={complaintHandler}\r\n\r\n                                />\r\n                                :\r\n                                <UiCard\r\n                                    data={complaint}\r\n                                    property='subject'\r\n                                    content={complaint['complaint']}\r\n                                    sideContent1={complaint.response}\r\n                                    sideContent={complaint.status}\r\n                                    handleClick={complaintHandler}\r\n                                   \r\n                                />\r\n    \r\n\r\n                                \r\n                                }\r\n                                  \r\n                              \r\n                            </Grid>\r\n                   \r\n                       \r\n                    \r\n\r\n                    \r\n                        ))\r\n                    \r\n                    }\r\n                    \r\n                </Grid>\r\n                 </Container>  \r\n                  \r\n    )\r\n\r\n}\r\n\r\nexport default Complaint;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Form from '../common/form';\r\nimport { toast } from 'react-toastify';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport dataService from '../../services/dataServices';\r\nimport Button from '@material-ui/core/Button';\r\nimport UiCard from '../common/uiCard';\r\n\r\nconst Meeting = (props) => {\r\nconst color = 'bf2604';\r\nconst { user } = props;   \r\nconst fields = [\r\n        { name: 'agenda', label: 'Agenda', type: 'text'},\r\n        { name: 'dateOfMeeting', label: 'Date of meeting', type: 'date'},\r\n        { name: 'time', label: 'time', type: 'time'},\r\n        { name: 'venue', label: 'venue', type: 'text'},\r\n        { name: 'participatingMembers', label: 'Meeting for ', type: 'text', placeholder: 'Type everyone or committee'}\r\n       \r\n\r\n    ];\r\nconst [ meetings, setMeetings ] = useState([]);\r\n\r\n   useEffect(()=>{\r\n         async function fetchService(resource){\r\n             try{\r\n                  const { data } = await dataService.getData(resource);\r\n                  setMeetings(data);\r\n             }\r\n             catch(e){\r\n                 toast.error('Something went wrong');\r\n             }\r\n         }\r\n         fetchService('meeting');\r\n     }, [])\r\n\r\n    const button = { type: 'submit', label: 'Schedule meeting', color: '#bf2604' };\r\n\r\n     const postSubmitLogic = async (submittedFormData) => { \r\n        \r\n        try {\r\n           \r\n            await dataService.postData('meeting', submittedFormData);\r\n             toast.success('Meeting is successfully scheduled');\r\n        }\r\n        catch (e) {\r\n            console.log(e.message);\r\n            toast.error('Something went wrong');\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <Container>\r\n          <Grid container spacing={2}>      \r\n             <Grid item xs={12} sm={12} lg={12}>\r\n            <Form\r\n                postSubmitLogic={postSubmitLogic}\r\n                heading='Schedule a meeting'\r\n                fields={fields}\r\n                button={button} />\r\n                </Grid>\r\n              \r\n        </Grid>\r\n                    <Grid container spacing={2}>\r\n                \r\n                    {\r\n                        \r\n                        meetings.map(meeting => (\r\n                  \r\n                        \r\n                           \r\n                            <Grid item lg={6}>\r\n                                {\r\n                                    user.isCommitteeMember ?\r\n                                \r\n                                  <UiCard\r\n                                    button={true} \r\n                                    data={meeting}\r\n                                    property='agenda'\r\n                                    content={meeting['venue']}\r\n                                    sideContent1={meeting.dateOfMeeting}\r\n                                    sideContent={meeting.time}\r\n                                    buttonLabel1='Add minutes'\r\n                                    buttonLabel2='Add conclusion'\r\n                                    \r\n\r\n                                />\r\n                                :\r\n                                <UiCard\r\n                                    data={meeting}\r\n                                    property='agenda'\r\n                                    content={meeting['venue']}\r\n                                    sideContent1={meeting.dateOfMeeting}\r\n                                    sideContent={meeting.time}\r\n                                    \r\n                                   \r\n                                />\r\n    \r\n\r\n                                \r\n                                }\r\n                                  \r\n                              \r\n                            </Grid>\r\n                   \r\n                       \r\n                    \r\n\r\n                    \r\n                        ))\r\n                    \r\n                    }\r\n                    \r\n                </Grid>\r\n                 </Container>  \r\n                  \r\n    )\r\n\r\n}\r\n\r\nexport default Meeting;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Form from '../common/form';\r\nimport { toast } from 'react-toastify';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport dataService from '../../services/dataServices';\r\nimport Button from '@material-ui/core/Button';\r\nimport UiCard from '../common/uiCard';\r\n\r\nconst Maintenance = (props) => {\r\nconst { user } = props;   \r\nconst fields = [\r\n        { name: 'maintenanceType', label: 'Maintenance Type ', type: 'text', placeholder: 'Water supply, security, electricity etc'},\r\n        { name: 'status', label: 'Status', type: 'text', placeholder: 'Active or Inactive'},\r\n        { name: 'costPerMonth', label: 'Cost per month', type: 'text'}\r\n\r\n    ];\r\n    const [ services, setServices ] = useState([]);\r\n    const button = { type: 'submit', label: 'Submit', color: '#bf2604' };\r\n\r\n    const postSubmitLogic = async (submittedFormData) => { \r\n        \r\n        try {\r\n           \r\n            await dataService.postData('maintenance', submittedFormData);\r\n             toast.success('Service successfully added');\r\n        }\r\n        catch (e) {\r\n            console.log(e.message);\r\n            toast.error('Something went wrong');\r\n        }\r\n    }\r\n\r\n     useEffect(()=>{\r\n         async function fetchService(resource){\r\n             try{\r\n                  const { data } = await dataService.getData(resource);\r\n                  setServices(data);\r\n             }\r\n             catch(e){\r\n                 toast.error('Something went wrong');\r\n             }\r\n         }\r\n         fetchService('maintenance');\r\n     }, [])\r\n    return(\r\n       <Container>\r\n          <Grid container spacing={2}>\r\n              {user.isCommitteeMember && \r\n              <>\r\n                <Grid item xs={12} sm={12} lg={12}>\r\n           \r\n            <Form\r\n                postSubmitLogic={postSubmitLogic}\r\n                heading='Add a service'\r\n                fields={fields}\r\n                button={button} />\r\n                </Grid>\r\n              </>\r\n              }\r\n        </Grid>\r\n              \r\n       \r\n        {services.length &&\r\n        <>\r\n                    <Grid container spacing={2}>\r\n                \r\n                    {\r\n                        \r\n                        services.map(service => (\r\n                  \r\n                        \r\n                           \r\n                            <Grid item lg={6}>\r\n                               \r\n                                \r\n                                <UiCard\r\n                                    data={service}\r\n                                    property='maintenanceType'\r\n                                    content={service['costPerMonth']}\r\n                                    sideContent={service.status}\r\n                                />\r\n                                    \r\n                            </Grid>\r\n                            \r\n                                   \r\n    \r\n\r\n                                \r\n                    \r\n                        ))\r\n                    \r\n                    }\r\n                    \r\n                </Grid>\r\n                </>\r\n        }\r\n                 </Container>  \r\n                                \r\n                                  \r\n                              \r\n                   \r\n                       \r\n                    \r\n\r\n                  \r\n    )\r\n\r\n}\r\n\r\nexport default Maintenance;","import React, { useState, useEffect } from 'react';\r\nimport Form from '../common/form';\r\nimport { toast } from 'react-toastify';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport dataService from '../../services/dataServices';\r\nimport Button from '@material-ui/core/Button';\r\nimport UiCard from '../common/uiCard';\r\n\r\nconst Neighbourhood = (props) => {\r\nconst { user } = props;   \r\nconst fields = [\r\n        { name: 'serviceType', label: 'Type of service ', type: 'text', placeholder: 'Grocery, gardener, electrician etc'},\r\n        { name: 'serviceName', label: 'Name of service', type: 'text', placeholder: 'Shop or contact person name'},\r\n        { name: 'contact', label: 'Contact of service', type: 'text', placeholder: 'Contact number'}\r\n\r\n    ];\r\n    const [ services, setServices ] = useState([]);\r\n    const button = { type: 'submit', label: 'Submit', color: '#bf2604' };\r\n\r\n    const postSubmitLogic = async (submittedFormData) => { \r\n        \r\n        try {\r\n           \r\n            await dataService.postData('neighbourhood', submittedFormData);\r\n             toast.success('Service successfully added');\r\n        }\r\n        catch (e) {\r\n            console.log(e.message);\r\n            toast.error('Something went wrong');\r\n        }\r\n    }\r\n\r\n     useEffect(()=>{\r\n         async function fetchService(resource){\r\n             try{\r\n                  const { data } = await dataService.getData(resource);\r\n                  setServices(data);\r\n             }\r\n             catch(e){\r\n                 toast.error('Something went wrong');\r\n             }\r\n         }\r\n         fetchService('neighbourhood');\r\n     }, [])\r\n    return(\r\n       <Container>\r\n          <Grid container spacing={2}>\r\n         <Grid item xs={12} sm={12} lg={12}>\r\n            <Form\r\n                postSubmitLogic={postSubmitLogic}\r\n                heading='Add a service'\r\n                fields={fields}\r\n                button={button} />\r\n                </Grid>\r\n              \r\n        </Grid>\r\n        {services.length &&\r\n        <>\r\n                    <Grid container spacing={2}>\r\n                \r\n                    {\r\n                        \r\n                        services.map(service => (\r\n                  \r\n                        \r\n                           \r\n                            <Grid item lg={6}>\r\n                               \r\n                                \r\n                                <UiCard\r\n                                    data={service}\r\n                                    property='serviceType'\r\n                                    content={service['serviceName']}\r\n                                    sideContent={service.contact}\r\n                                />\r\n                                    \r\n                            </Grid>\r\n                            \r\n                                   \r\n    \r\n\r\n                                \r\n                    \r\n                        ))\r\n                    \r\n                    }\r\n                    \r\n                </Grid>\r\n                </>\r\n        }\r\n                 </Container>  \r\n                                \r\n                                  \r\n                              \r\n                   \r\n                       \r\n                    \r\n\r\n                  \r\n    )\r\n\r\n}\r\n\r\nexport default Neighbourhood;","import React from 'react';\r\nimport Application from './services/application';\r\nimport Complaint from './services/complaint';\r\nimport Meeting from './services/meeting';\r\nimport Maintenance from './services/maintenance';\r\nimport Neighbourhood from './services/neighbourhood';\r\n\r\n\r\nconst Service = (props) => {\r\nconst { serviceTitle } = props.match.params;\r\nconst { user } = props;\r\n\r\nif (serviceTitle === 'application-request')\r\n     return <Application user={user}/>\r\n\r\nelse if (serviceTitle === 'complaints')\r\n     return <Complaint user={user}/>\r\n\r\nelse if (serviceTitle === 'meeting')\r\n     return <Meeting user={user}/>\r\n\r\nelse if (serviceTitle === 'maintenance-information')\r\n     return <Maintenance user={user}/>\r\n\r\nelse if (serviceTitle === 'neighbourhood-services')\r\n     return <Neighbourhood user={user}/>\r\n\r\n}\r\n\r\nexport default Service;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\n//import ps from '../illustrations/ps.svg';\r\nimport welcome1 from '../illustrations/welcome-1.svg';\r\n// import  Container  from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst color = '#bf2604';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    btn: {\r\n        border: `2 px solid ${color}`,\r\n        backgroundColor: color,\r\n        color: 'white',\r\n        '&:hover': {\r\n            backgroundColor: color\r\n        }\r\n    }\r\n}))\r\n\r\nconst Welcome = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const handleClick = () => {\r\n        return props.history.push('/auth/signup');\r\n    }\r\n    return (\r\n        <>\r\n            <br />\r\n\r\n            <Grid container spacing={4}>\r\n                <Grid item xs>\r\n                    <img src={welcome1} />\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Typography variant='h3'\r\n                        style={{ fontWeight: '700' }}>\r\n                        <br />\r\n            A place for all your society related matters\r\n            \r\n         </Typography>\r\n                    <Typography variant='h6'>\r\n                        <br />\r\n           Join now to stay connected with your society and it's important matters. <br />\r\n             Get better at maintaining managerial tasks <br /> with our easy to use society ecosystem features.\r\n         </Typography>\r\n                    <br />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        onClick={handleClick}\r\n                        className={classes.btn}\r\n                    >\r\n                        Get started\r\n          </Button>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n            <footer>\r\n\r\n                <small style={{ fontFamily: 'Roboto' }}>Copyright &copy;  {new Date().getFullYear()} <Link color='inherit' href='/'>Society+ | </Link> <Link color='inherit' href='/'>Terms  </Link>\r\n         | <Link color='inherit' href='/'> Privacy</Link></small>\r\n\r\n\r\n\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Welcome);\r\n","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst color = 'white';\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        color: color,\r\n        fontWeight: '700',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 200,\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nfunction Navbar(props) {\r\n\r\n    const { user } = props;\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = event => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n    // to show all committee members \r\n    const handleMembersClick = () => {\r\n        return props.history.push('/members/committee-members');\r\n    }\r\n    // logo click\r\n    const handleLogoClick = () => {\r\n        return props.history.push('/');\r\n    }\r\n\r\n   \r\n    // handle auth button click\r\n    const handleAuth = (authType) => {\r\n        if (authType === 'login')\r\n            return props.history.push('/auth/login');\r\n        if (authType === 'signup')\r\n            return props.history.push('/auth/signup');\r\n    }\r\n      const handleLogout = () =>{\r\n    return props.history.push('/user/logout')\r\n  }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n           <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    \r\n   \r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"static\"\r\n                style={{\r\n                    backgroundColor: '#bf2604'\r\n                }}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h5\" noWrap>\r\n                        <IconButton onClick={handleLogoClick} style={{ color: color }}> Society+ </IconButton>\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        {user && \r\n                        <>\r\n                         \r\n                          <IconButton style={{ fontSize: '20px' }} color=\"inherit\" onClick={handleMembersClick}>\r\n\r\n                            Committee Members\r\n                        </IconButton>\r\n                        </>}\r\n                       \r\n                        {!user &&\r\n                            <>\r\n                           \r\n                                <IconButton style={{ fontSize: '20px' }} color=\"inherit\" onClick={() => handleAuth('login')}>\r\n                                    Login\r\n                        </IconButton>\r\n\r\n                                <IconButton style={{ fontSize: '20px' }} color=\"inherit\" onClick={() => handleAuth('signup')}>\r\n                                    Signup\r\n                        </IconButton>\r\n                            </>\r\n                        }\r\n\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                       \r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            {user ? renderMenu : null}\r\n        </div>\r\n    );\r\n}\r\nexport default withRouter(Navbar);","import axios from 'axios';\r\n// import _ from 'lodash';\r\nimport jwtDecode from 'jwt-decode';\r\nconst url = 'http://localhost:5000/api';\r\nconst tokenKey = 'privateUserToken';\r\n\r\nconst getToken = () => {\r\n    return localStorage.getItem(tokenKey);\r\n}\r\nconst config = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-auth-token': getToken()\r\n    }\r\n}\r\n// api calling func to register a user \r\nconst registerUser = (user) => {\r\n\r\n    return axios.post(`${url}/users/auth/signup`, user);\r\n\r\n\r\n}\r\n// to login a user\r\nconst loginUser = (credential) => {\r\n    return axios.post(`${url}/users/auth/login`, credential);\r\n\r\n\r\n}\r\nconst getCurrentUser = () => {\r\n    try {\r\n        const user = jwtDecode(localStorage.getItem(tokenKey));\r\n        return user;\r\n    }\r\n    catch (ex) {\r\n        return null;\r\n    }\r\n}\r\nconst logout = () => {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\n\r\nexport default {\r\n    registerUser,\r\n    tokenKey,\r\n    getCurrentUser,\r\n    logout,\r\n    loginUser,\r\n   \r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport dataService from '../../services/dataServices';\r\nimport service from '../../services/userServices';\r\nimport Form from '../common/form';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const fields = [\r\n      \r\n        { name: 'email', label: 'Email', type: 'email' },\r\n        { name: 'password', label: 'Password', type: 'password' },\r\n\r\n    ];\r\n    const button = { type: 'submit', label: 'Login', color: '#bf2604' };\r\n\r\n     const postSubmitLogic = async (submittedFormData) => { \r\n        \r\n        try {\r\n            // console.log(submittedFormData);\r\n            const { data: token } = await service.loginUser(submittedFormData);\r\n            \r\n            localStorage.setItem(service.tokenKey, token);\r\n            window.location = '/';\r\n            \r\n        }\r\n        catch (e) {\r\n            console.log(e.message);\r\n            toast.error('Something went wrong');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Form\r\n                postSubmitLogic={postSubmitLogic}\r\n                heading='Login'\r\n                fields={fields}\r\n                button={button} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport dataService from '../../services/dataServices';\r\nimport service from '../../services/userServices';\r\nimport Form from '../common/form';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Signup1 = () => {\r\n    const history = useHistory();\r\n    const fields = [\r\n      \r\n        { name: 'email', label: 'Email', type: 'email' },\r\n        { name: 'password', label: 'Password', type: 'password' },\r\n\r\n    ];\r\n    const button = { type: 'submit', label: 'Continue', color: '#bf2604' };\r\n\r\n    const postSubmitLogic = (submittedFormData) => {\r\n        // api call or something\r\n        // eg\r\n        // console.log(submittedFormData);\r\n        history.push('/auth/signup/join', submittedFormData);\r\n    }\r\n    return (\r\n        <>\r\n            <Form\r\n                postSubmitLogic={postSubmitLogic}\r\n                heading='Join now to stay connected with your society in a better way'\r\n                fields={fields}\r\n                button={button} />\r\n        </>\r\n    )\r\n}\r\n// after first signup\r\n\r\nconst Signup2 = (props) => {\r\n    const history = useHistory();\r\n    const data = history.location.state;\r\n    const fields = [\r\n        { name: 'fullName', label: 'Full Name', type: 'text' },\r\n        { name: 'society', label: 'Society', type: 'text' },\r\n        { name: 'houseNo', label: 'House No', type: 'number' },\r\n        { name: 'ownershipType', label: 'Ownership Type', type: 'text', placeholder: 'Type owned or rented' },\r\n        { name: 'memberType', label: 'Your management role', type: 'text', placeholder: 'Type President, Secretary, Treasurer, or None' },\r\n       \r\n\r\n    ];\r\n    // const dropDown = {\r\n    //     name: 'gender', label: 'Gender', options: ['Male', 'Female']\r\n    // };\r\n    const button = { type: 'submit', label: 'Join', color: '#bf2604' };\r\n\r\n    const postSubmitLogic = async (submittedFormData) => {\r\n        // api call or something\r\n       \r\n        let user = { ...submittedFormData, ...data };\r\n        // console.log(user);\r\n        try {\r\n            const response = await service.registerUser(user);\r\n           \r\n            localStorage.setItem(service.tokenKey, response.headers['x-auth-token']);\r\n            window.location = '/';\r\n        }\r\n        catch (e) {\r\n            console.log(e.message);\r\n            toast.error('Something went wrong');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Form\r\n                postSubmitLogic={postSubmitLogic}\r\n                heading='Join now to stay connected with your society in a better way'\r\n                fields={fields}\r\n\r\n                button={button} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst Signup = (props) => {\r\n    const path = props.location.pathname;\r\n    if (path === '/auth/signup/join')\r\n        return <Signup2 />;\r\n    else if (path === '/auth/signup')\r\n        return <Signup1 />;\r\n}\r\nexport default Signup;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport userService from '../../services/userServices';\r\n\r\nconst Logout = () => {\r\n\r\n    useEffect(() => {\r\n        userService.logout();\r\n        window.location = '/';\r\n    }, []);\r\n\r\n    return null;\r\n    \r\n}\r\nexport default Logout","import React, { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { Route, Switch } from 'react-router-dom';\nimport Feed from './components/feed';\nimport ShowMembers from './components/showMembers';\nimport Service from './components/service';\nimport Welcome from './components/welcome';\nimport Navbar from './components/common/navbar';\nimport Login from './components/auth/login';\nimport Signup from './components/auth/signup';\nimport Logout from './components/auth/logout';\n\n// import dataServices from './services/dataServices';\nimport userService from './services/userServices';\n\nfunction App() {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n\n\n    setUser(userService.getCurrentUser())\n\n  }, [])\n  return (\n    <>\n      <Navbar\n        user={user}\n      />\n      <br />\n      <br />\n      <ToastContainer />\n      <Switch>\n\n       \n        <Route path='/auth/signup/join' component={Signup} />\n        <Route path='/auth/signup' component={Signup} />\n        <Route path='/auth/login' component={Login} />\n         <Route path='/user/logout' component={Logout} />\n        <Route path='/members/committee-members' component={ShowMembers} />\n\n        <Route  path='/:serviceTitle' render={(props) => <Service {...props} user={user} />} />\n       \n        <Route exact path='/' render={(props) => user ? <Feed {...props} user={user} /> : <Welcome/>} />\n        \n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/service.01529538.svg\";","module.exports = __webpack_public_path__ + \"static/media/welcome-1.a0513168.svg\";"],"sourceRoot":""}